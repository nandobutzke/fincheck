version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    environment:
      - CHOKIDAR_USEPOLLING=true # Para evitar problemas com sistemas de arquivos em containers
    depends_on:
      - api
    volumes:
      - ./frontend:/fincheck
      - /frontend/node_modules

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=development
    depends_on:
      - lambda
    volumes:
      - ./api:/fincheck
      - /api/node_modules

  lambda:
    image: lambci/lambda:nodejs
    ports:
      - '9001:9001'
    environment:
      - AWS_LAMBDA_RUNTIME_API=localhost:9001
    volumes:
      - ./lambda:/var/task
  
  pg:
    image: postgres:latest
    container_name: pg
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data


volumes:
  node_modules:
  pg_data: